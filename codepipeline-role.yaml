AWSTemplateFormatVersion: '2010-09-09'
Description: 'CodePipeline role with cross-account deployment permissions'

Parameters:
  ProjectName:
    Type: String
    Default: financial-app
    Description: Project name
  
  DevAccountId:
    Type: String
    Default: '177652208709'
    Description: Development Account ID
  
  TestAccountId:
    Type: String
    Default: '729318851627'
    Description: Test Account ID

Resources:
  # CodePipeline Service Role
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-codepipeline-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineBasePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:GetBucketVersioning
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${ProjectName}-pipeline-artifacts-${AWS::AccountId}'
                  - !Sub 'arn:aws:s3:::${ProjectName}-pipeline-artifacts-${AWS::AccountId}/*'
                  - !Sub 'arn:aws:s3:::${ProjectName}-cicd-templates-${AWS::AccountId}'
                  - !Sub 'arn:aws:s3:::${ProjectName}-cicd-templates-${AWS::AccountId}/*'
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${ProjectName}-template-validation'
        - PolicyName: CrossAccountDeploymentPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Sub 'arn:aws:iam::${DevAccountId}:role/CrossAccountDeploymentRole-dev'
                  - !Sub 'arn:aws:iam::${TestAccountId}:role/CrossAccountDeploymentRole-test'
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeChangeSet
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:GetTemplate
                  - cloudformation:ValidateTemplate
                Resource: '*'

  # CodeBuild Service Role
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-codebuild-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${ProjectName}-pipeline-artifacts-${AWS::AccountId}'
                  - !Sub 'arn:aws:s3:::${ProjectName}-pipeline-artifacts-${AWS::AccountId}/*'
                  - !Sub 'arn:aws:s3:::${ProjectName}-cicd-templates-${AWS::AccountId}'
                  - !Sub 'arn:aws:s3:::${ProjectName}-cicd-templates-${AWS::AccountId}/*'

Outputs:
  CodePipelineRoleArn:
    Description: ARN of the CodePipeline service role
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: !Sub '${ProjectName}-CodePipelineRole-Arn'
  
  CodeBuildRoleArn:
    Description: ARN of the CodeBuild service role
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: !Sub '${ProjectName}-CodeBuildRole-Arn'
